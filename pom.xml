<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.yifan.demo</groupId>
  <artifactId>resttful</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>resttful Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <!--
      相关学习地址 ：http://websystique.com/spring-4-mvc-tutorial/
   -->


  <properties>
    <spring.version>4.3.8.RELEASE</spring.version>
    <jackson.version>2.8.8</jackson.version>
    <mybatisVersion>3.4.4</mybatisVersion>
    <mybatisSpringVersion>1.3.1</mybatisSpringVersion>
    <commonsDbcp>1.4</commonsDbcp>
    <commonsPool>1.6</commonsPool>
    <mysqlDriverVersion>6.0.6</mysqlDriverVersion>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>


    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>



    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysqlDriverVersion}</version>
    </dependency>


    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commonsDbcp}</version>
    </dependency>

    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>${commonsPool}</version>
    </dependency>


    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatisVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatisSpringVersion}</version>
    </dependency>


    <!-- servlet采用常见的接受请求和生成响应的编程模型 ,由sun公司开发的 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
      <!-- provided 只影响在编译 测试阶段使用，不会在发布、打包等阶段将包放入lib目录下，常用于我们发布的目标容器中已经存在包 -->
    </dependency>

    <!-- 用于在代码中自动生成set/get -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.4</version>
    </dependency>

  </dependencies>




  <build>
    <finalName>resttful</finalName>

    <plugins>

      <!--
         由于 JavaConfig 方式实现 没有 web.xml ，为了避免报错，需要添加如下配置
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <warSourceDirectory>src/main/webapp</warSourceDirectory>
          <warName>resttful</warName>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>


      <!--
          【注意】：
          tomcat6-maven-plugin ： 只支持普通页面请求响应；restful 请求过来时仍被当作普通请求
          tomcat7-maven-plugin : 支持 restful 类请求
      -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <url>http://localhost:8080/manager/html</url>
          <server>tomcat-local</server>
          <path>/</path>
          <port>8085</port>
        </configuration>
      </plugin>
    </plugins>


  </build>
</project>
